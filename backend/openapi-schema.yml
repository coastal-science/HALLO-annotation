openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/user/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/user/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/user/progress/:
    get:
      operationId: listAnnotatorProgress
      description: ''
      parameters:
      - name: annotator
        required: false
        in: query
        description: annotator
        schema:
          type: string
      - name: batch
        required: false
        in: query
        description: batch
        schema:
          type: string
      - name: segment
        required: false
        in: query
        description: segment
        schema:
          type: string
      - name: is_marked
        required: false
        in: query
        description: is_marked
        schema:
          type: string
      - name: is_completed
        required: false
        in: query
        description: is_completed
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnnotatorProgress'
          description: ''
      tags:
      - api
    post:
      operationId: createAnnotatorProgress
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotatorProgress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotatorProgress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotatorProgress'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotatorProgress'
          description: ''
      tags:
      - api
  /api/user/progress/{id}/:
    get:
      operationId: retrieveAnnotatorProgress
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this annotator progress.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotatorProgress'
          description: ''
      tags:
      - api
    put:
      operationId: updateAnnotatorProgress
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this annotator progress.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotatorProgress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotatorProgress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotatorProgress'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotatorProgress'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateAnnotatorProgress
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this annotator progress.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotatorProgress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotatorProgress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotatorProgress'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotatorProgress'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyAnnotatorProgress
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this annotator progress.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/batch/{id}/:
    get:
      operationId: retrieveBatch
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this batch.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ''
      tags:
      - api
    put:
      operationId: updateBatch
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this batch.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Batch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Batch'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBatch
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this batch.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Batch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Batch'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBatch
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this batch.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/batch/:
    get:
      operationId: listBatchs
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Batch'
          description: ''
      tags:
      - api
    post:
      operationId: createBatch
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Batch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Batch'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: ''
      tags:
      - api
  /api/batch/image/{id}/:
    get:
      operationId: retrieveBatchSegmentImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this batch segment image.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchImage'
          description: ''
      tags:
      - api
    put:
      operationId: updateBatchSegmentImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this batch segment image.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchImage'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchImage'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBatchSegmentImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this batch segment image.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchImage'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchImage'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBatchSegmentImage
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this batch segment image.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/batch/image/:
    get:
      operationId: listBatchSegmentImages
      description: ''
      parameters:
      - name: batch
        required: false
        in: query
        description: batch
        schema:
          type: string
      - name: segment
        required: false
        in: query
        description: segment
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatchImage'
          description: ''
      tags:
      - api
    post:
      operationId: createBatchSegmentImage
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchImage'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchImage'
          description: ''
      tags:
      - api
  /api/file/scan/:
    get:
      operationId: listfile_list_views
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/file/:
    get:
      operationId: listFiles
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
          description: ''
      tags:
      - api
    post:
      operationId: createFile
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/File'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/File'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
      tags:
      - api
  /api/file/{id}/:
    get:
      operationId: retrieveFile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this file.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
      tags:
      - api
    put:
      operationId: updateFile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this file.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/File'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/File'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateFile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this file.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/File'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/File'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyFile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this file.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/segment/{id}/:
    get:
      operationId: retrieveSegment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this segment.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment'
          description: ''
      tags:
      - api
    put:
      operationId: updateSegment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this segment.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Segment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Segment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Segment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSegment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this segment.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Segment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Segment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Segment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySegment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this segment.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/segment/:
    get:
      operationId: listSegments
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Segment'
          description: ''
      tags:
      - api
    post:
      operationId: createSegment
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Segment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Segment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Segment'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment'
          description: ''
      tags:
      - api
  /api/annotation/{id}/:
    get:
      operationId: retrieveAnnotation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this annotation.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - api
    put:
      operationId: updateAnnotation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this annotation.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateAnnotation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this annotation.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyAnnotation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this annotation.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/annotation/:
    get:
      operationId: listAnnotations
      description: ''
      parameters:
      - name: annotator
        required: false
        in: query
        description: annotator
        schema:
          type: string
      - name: segment
        required: false
        in: query
        description: segment
        schema:
          type: string
      - name: batch
        required: false
        in: query
        description: batch
        schema:
          type: string
      - name: pod
        required: false
        in: query
        description: pod
        schema:
          type: string
      - name: call_type
        required: false
        in: query
        description: call_type
        schema:
          type: string
      - name: sound_id_species
        required: false
        in: query
        description: sound_id_species
        schema:
          type: string
      - name: kw_ecotype
        required: false
        in: query
        description: kw_ecotype
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - api
    post:
      operationId: createAnnotation
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - api
  /api/annotation/create/:
    get:
      operationId: listAnnotations
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - api
    post:
      operationId: createAnnotation
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - api
  /api/hallo/image/:
    get:
      operationId: listimage_views
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/hallo/audio/:
    get:
      operationId: listaudio_views
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/user/register/:
    post:
      operationId: createCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/user/logout/:
    post:
      operationId: createBlacklistTokenUpdate
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/user/login/:
    post:
      operationId: createCustomTokenObtainPair
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
      tags:
      - api
  /api/user/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
        user_name:
          type: string
        password:
          type: string
          writeOnly: true
          minLength: 8
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        assigned_batches:
          type: array
          items:
            type: integer
        batches:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - email
      - user_name
      - password
    AnnotatorProgress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        segment:
          type: integer
        batch:
          type: integer
        annotator:
          type: integer
        is_completed:
          type: boolean
        is_marked:
          type: boolean
        name:
          type: string
          maxLength: 150
      required:
      - segment
      - batch
      - annotator
      - name
    Batch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        batch_name:
          type: string
          maxLength: 250
        description:
          type: string
        spectrogram_type:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
          minimum: -2147483648
          maximum: 2147483647
        window_length:
          type: string
          format: decimal
          multipleOf: 1.0e-05
          maximum: 10
          minimum: -10
        step_size:
          type: string
          format: decimal
          multipleOf: 1.0e-05
          maximum: 10
          minimum: -10
        zoom_level:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        rate:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        freq_min:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        freq_max:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        clip_extension:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        color_map:
          enum:
          - 0
          type: integer
          minimum: -2147483648
          maximum: 2147483647
        allow_change_settings:
          type: boolean
        model_developer:
          type: integer
        created_at:
          type: string
          format: date-time
        annotators:
          type: array
          items:
            type: integer
        segments:
          type: array
          items:
            type: integer
      required:
      - batch_name
      - model_developer
    BatchImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        segment:
          type: integer
        batch:
          type: integer
        image:
          type: string
          format: binary
          nullable: true
      required:
      - segment
      - batch
    File:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        filename:
          type: string
          maxLength: 250
        dirname:
          type: string
          maxLength: 250
        path:
          type: string
          maxLength: 250
        filesize:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        datetime:
          type: string
          format: date-time
        duration:
          type: string
          format: decimal
          multipleOf: 0.001
          maximum: 10000000
          minimum: -10000000
        is_included:
          type: boolean
        deleted:
          type: boolean
        created_at:
          type: string
          format: date-time
      required:
      - filename
      - dirname
      - path
      - filesize
      - datetime
      - duration
    Segment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: integer
        start:
          type: string
          format: decimal
          multipleOf: 0.001
          maximum: 10000000
          minimum: -10000000
        end:
          type: string
          format: decimal
          multipleOf: 0.001
          maximum: 10000000
          minimum: -10000000
        created_at:
          type: string
          format: date-time
        batches:
          type: array
          items:
            type: string
          readOnly: true
        audio:
          type: string
          format: binary
          nullable: true
        label:
          type: string
          maxLength: 128
      required:
      - file
    Annotation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        batch:
          type: integer
        segment:
          type: integer
        start:
          type: string
          format: decimal
          multipleOf: 0.001
          maximum: 10000
          minimum: -10000
        end:
          type: string
          format: decimal
          multipleOf: 0.001
          maximum: 10000
          minimum: -10000
        freq_max:
          type: string
          format: decimal
          multipleOf: 0.001
          maximum: 100000
          minimum: -100000
        freq_min:
          type: string
          format: decimal
          multipleOf: 0.001
          maximum: 100000
          minimum: -100000
        offset:
          type: string
          format: decimal
          multipleOf: 0.001
          maximum: 10000
          minimum: -10000
        sound_id_species:
          type: string
          maxLength: 128
        kw_ecotype:
          type: string
          maxLength: 128
        pod:
          type: string
          maxLength: 128
        call_type:
          type: string
          maxLength: 128
        label:
          type: string
          maxLength: 128
        confidence_level:
          type: string
          maxLength: 128
        comments:
          type: string
        annotator:
          type: integer
        created_at:
          type: string
          format: date-time
      required:
      - batch
      - segment
      - sound_id_species
      - annotator
    CustomTokenObtainPair:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
      required:
      - refresh
