version: "3.8"

services:
  db:
    image: postgres:13
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    container_name: hallo_postgres_db

  # Django backend server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./backend:/backend
      - ../data/for_annotation:/backend/media/audio:ro
      - ../spectrogram:/backend/media/spectrogram
      - ../audio_clips:/backend/media/audio_clips
      - backend_media:/backend/media
      - backend_static:/backend/staticfiles
    expose:
      - 8000
    container_name: hallo_backend
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=orca.research.sfu.ca
      - DJANGO_CORS_ORIGIN_WHITELIST=https://orca.research.sfu.ca
      - DJANGO_FORCE_SCRIPT_NAME=/annotation
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    command: >
      bash -c "python manage.py makemigrations
      && python manage.py migrate
      && python manage.py collectstatic --noinput
      && gunicorn api.asgi:application -k uvicorn.workers.UvicornWorker -b 0.0.0.0:8000"
    depends_on:
      - db

  nginx:
    build:
      context: ./
      dockerfile: Dockerfile.sfu
    user: root
    restart: unless-stopped
    volumes:
      - backend_media:/media
      - backend_static:/staticfiles
      - ../audio_clips:/media/audio_clips
      - ../spectrogram:/media/spectrogram
    ports:
      - 80:80
    container_name: hallo_nginx
    depends_on:
      - backend

volumes:
  db_data:
  backend_media:
  backend_static:
